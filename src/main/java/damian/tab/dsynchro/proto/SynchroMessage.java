// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/message.proto

package damian.tab.dsynchro.proto;

/**
 * <pre>
 *pub-sub serwer√≥w
 * </pre>
 *
 * Protobuf type {@code synchro.SynchroMessage}
 */
public final class SynchroMessage extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:synchro.SynchroMessage)
    SynchroMessageOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SynchroMessage.newBuilder() to construct.
  private SynchroMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SynchroMessage() {
    clock_ = emptyIntList();
    type_ = 0;
    objectID_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SynchroMessage();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SynchroMessage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            processID_ = input.readInt32();
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              clock_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            clock_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              clock_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              clock_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            objectID_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        clock_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return damian.tab.dsynchro.proto.ProtoMessages.internal_static_synchro_SynchroMessage_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return damian.tab.dsynchro.proto.ProtoMessages.internal_static_synchro_SynchroMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            damian.tab.dsynchro.proto.SynchroMessage.class, damian.tab.dsynchro.proto.SynchroMessage.Builder.class);
  }

  /**
   * Protobuf enum {@code synchro.SynchroMessage.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOCK = 0;</code>
     */
    LOCK(0),
    /**
     * <code>UNLOCK = 1;</code>
     */
    UNLOCK(1),
    /**
     * <code>NOTIFY = 2;</code>
     */
    NOTIFY(2),
    /**
     * <code>NOTIFY_ALL = 3;</code>
     */
    NOTIFY_ALL(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LOCK = 0;</code>
     */
    public static final int LOCK_VALUE = 0;
    /**
     * <code>UNLOCK = 1;</code>
     */
    public static final int UNLOCK_VALUE = 1;
    /**
     * <code>NOTIFY = 2;</code>
     */
    public static final int NOTIFY_VALUE = 2;
    /**
     * <code>NOTIFY_ALL = 3;</code>
     */
    public static final int NOTIFY_ALL_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return LOCK;
        case 1: return UNLOCK;
        case 2: return NOTIFY;
        case 3: return NOTIFY_ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MessageType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return damian.tab.dsynchro.proto.SynchroMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:synchro.SynchroMessage.MessageType)
  }

  public static final int PROCESSID_FIELD_NUMBER = 1;
  private int processID_;
  /**
   * <code>int32 processID = 1;</code>
   * @return The processID.
   */
  @java.lang.Override
  public int getProcessID() {
    return processID_;
  }

  public static final int CLOCK_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList clock_;
  /**
   * <code>repeated int32 clock = 2;</code>
   * @return A list containing the clock.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getClockList() {
    return clock_;
  }
  /**
   * <code>repeated int32 clock = 2;</code>
   * @return The count of clock.
   */
  public int getClockCount() {
    return clock_.size();
  }
  /**
   * <code>repeated int32 clock = 2;</code>
   * @param index The index of the element to return.
   * @return The clock at the given index.
   */
  public int getClock(int index) {
    return clock_.getInt(index);
  }
  private int clockMemoizedSerializedSize = -1;

  public static final int TYPE_FIELD_NUMBER = 3;
  private int type_;
  /**
   * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
   * @return The type.
   */
  @java.lang.Override public damian.tab.dsynchro.proto.SynchroMessage.MessageType getType() {
    @SuppressWarnings("deprecation")
    damian.tab.dsynchro.proto.SynchroMessage.MessageType result = damian.tab.dsynchro.proto.SynchroMessage.MessageType.valueOf(type_);
    return result == null ? damian.tab.dsynchro.proto.SynchroMessage.MessageType.UNRECOGNIZED : result;
  }

  public static final int OBJECTID_FIELD_NUMBER = 4;
  private volatile java.lang.Object objectID_;
  /**
   * <code>string objectID = 4;</code>
   * @return The objectID.
   */
  @java.lang.Override
  public java.lang.String getObjectID() {
    java.lang.Object ref = objectID_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      objectID_ = s;
      return s;
    }
  }
  /**
   * <code>string objectID = 4;</code>
   * @return The bytes for objectID.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getObjectIDBytes() {
    java.lang.Object ref = objectID_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      objectID_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (processID_ != 0) {
      output.writeInt32(1, processID_);
    }
    if (getClockList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(clockMemoizedSerializedSize);
    }
    for (int i = 0; i < clock_.size(); i++) {
      output.writeInt32NoTag(clock_.getInt(i));
    }
    if (type_ != damian.tab.dsynchro.proto.SynchroMessage.MessageType.LOCK.getNumber()) {
      output.writeEnum(3, type_);
    }
    if (!getObjectIDBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, objectID_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (processID_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, processID_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < clock_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(clock_.getInt(i));
      }
      size += dataSize;
      if (!getClockList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      clockMemoizedSerializedSize = dataSize;
    }
    if (type_ != damian.tab.dsynchro.proto.SynchroMessage.MessageType.LOCK.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, type_);
    }
    if (!getObjectIDBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, objectID_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof damian.tab.dsynchro.proto.SynchroMessage)) {
      return super.equals(obj);
    }
    damian.tab.dsynchro.proto.SynchroMessage other = (damian.tab.dsynchro.proto.SynchroMessage) obj;

    if (getProcessID()
        != other.getProcessID()) return false;
    if (!getClockList()
        .equals(other.getClockList())) return false;
    if (type_ != other.type_) return false;
    if (!getObjectID()
        .equals(other.getObjectID())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROCESSID_FIELD_NUMBER;
    hash = (53 * hash) + getProcessID();
    if (getClockCount() > 0) {
      hash = (37 * hash) + CLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getClockList().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    hash = (37 * hash) + OBJECTID_FIELD_NUMBER;
    hash = (53 * hash) + getObjectID().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static damian.tab.dsynchro.proto.SynchroMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(damian.tab.dsynchro.proto.SynchroMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *pub-sub serwer√≥w
   * </pre>
   *
   * Protobuf type {@code synchro.SynchroMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:synchro.SynchroMessage)
      damian.tab.dsynchro.proto.SynchroMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return damian.tab.dsynchro.proto.ProtoMessages.internal_static_synchro_SynchroMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return damian.tab.dsynchro.proto.ProtoMessages.internal_static_synchro_SynchroMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              damian.tab.dsynchro.proto.SynchroMessage.class, damian.tab.dsynchro.proto.SynchroMessage.Builder.class);
    }

    // Construct using damian.tab.dsynchro.proto.SynchroMessage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      processID_ = 0;

      clock_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      type_ = 0;

      objectID_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return damian.tab.dsynchro.proto.ProtoMessages.internal_static_synchro_SynchroMessage_descriptor;
    }

    @java.lang.Override
    public damian.tab.dsynchro.proto.SynchroMessage getDefaultInstanceForType() {
      return damian.tab.dsynchro.proto.SynchroMessage.getDefaultInstance();
    }

    @java.lang.Override
    public damian.tab.dsynchro.proto.SynchroMessage build() {
      damian.tab.dsynchro.proto.SynchroMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public damian.tab.dsynchro.proto.SynchroMessage buildPartial() {
      damian.tab.dsynchro.proto.SynchroMessage result = new damian.tab.dsynchro.proto.SynchroMessage(this);
      int from_bitField0_ = bitField0_;
      result.processID_ = processID_;
      if (((bitField0_ & 0x00000001) != 0)) {
        clock_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.clock_ = clock_;
      result.type_ = type_;
      result.objectID_ = objectID_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof damian.tab.dsynchro.proto.SynchroMessage) {
        return mergeFrom((damian.tab.dsynchro.proto.SynchroMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(damian.tab.dsynchro.proto.SynchroMessage other) {
      if (other == damian.tab.dsynchro.proto.SynchroMessage.getDefaultInstance()) return this;
      if (other.getProcessID() != 0) {
        setProcessID(other.getProcessID());
      }
      if (!other.clock_.isEmpty()) {
        if (clock_.isEmpty()) {
          clock_ = other.clock_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureClockIsMutable();
          clock_.addAll(other.clock_);
        }
        onChanged();
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (!other.getObjectID().isEmpty()) {
        objectID_ = other.objectID_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      damian.tab.dsynchro.proto.SynchroMessage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (damian.tab.dsynchro.proto.SynchroMessage) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int processID_ ;
    /**
     * <code>int32 processID = 1;</code>
     * @return The processID.
     */
    @java.lang.Override
    public int getProcessID() {
      return processID_;
    }
    /**
     * <code>int32 processID = 1;</code>
     * @param value The processID to set.
     * @return This builder for chaining.
     */
    public Builder setProcessID(int value) {
      
      processID_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 processID = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProcessID() {
      
      processID_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList clock_ = emptyIntList();
    private void ensureClockIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        clock_ = mutableCopy(clock_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @return A list containing the clock.
     */
    public java.util.List<java.lang.Integer>
        getClockList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(clock_) : clock_;
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @return The count of clock.
     */
    public int getClockCount() {
      return clock_.size();
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @param index The index of the element to return.
     * @return The clock at the given index.
     */
    public int getClock(int index) {
      return clock_.getInt(index);
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @param index The index to set the value at.
     * @param value The clock to set.
     * @return This builder for chaining.
     */
    public Builder setClock(
        int index, int value) {
      ensureClockIsMutable();
      clock_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @param value The clock to add.
     * @return This builder for chaining.
     */
    public Builder addClock(int value) {
      ensureClockIsMutable();
      clock_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @param values The clock to add.
     * @return This builder for chaining.
     */
    public Builder addAllClock(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureClockIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, clock_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 clock = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearClock() {
      clock_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {
      
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
     * @return The type.
     */
    @java.lang.Override
    public damian.tab.dsynchro.proto.SynchroMessage.MessageType getType() {
      @SuppressWarnings("deprecation")
      damian.tab.dsynchro.proto.SynchroMessage.MessageType result = damian.tab.dsynchro.proto.SynchroMessage.MessageType.valueOf(type_);
      return result == null ? damian.tab.dsynchro.proto.SynchroMessage.MessageType.UNRECOGNIZED : result;
    }
    /**
     * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(damian.tab.dsynchro.proto.SynchroMessage.MessageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.synchro.SynchroMessage.MessageType type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {
      
      type_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object objectID_ = "";
    /**
     * <code>string objectID = 4;</code>
     * @return The objectID.
     */
    public java.lang.String getObjectID() {
      java.lang.Object ref = objectID_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        objectID_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string objectID = 4;</code>
     * @return The bytes for objectID.
     */
    public com.google.protobuf.ByteString
        getObjectIDBytes() {
      java.lang.Object ref = objectID_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string objectID = 4;</code>
     * @param value The objectID to set.
     * @return This builder for chaining.
     */
    public Builder setObjectID(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      objectID_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string objectID = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearObjectID() {
      
      objectID_ = getDefaultInstance().getObjectID();
      onChanged();
      return this;
    }
    /**
     * <code>string objectID = 4;</code>
     * @param value The bytes for objectID to set.
     * @return This builder for chaining.
     */
    public Builder setObjectIDBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      objectID_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:synchro.SynchroMessage)
  }

  // @@protoc_insertion_point(class_scope:synchro.SynchroMessage)
  private static final damian.tab.dsynchro.proto.SynchroMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new damian.tab.dsynchro.proto.SynchroMessage();
  }

  public static damian.tab.dsynchro.proto.SynchroMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SynchroMessage>
      PARSER = new com.google.protobuf.AbstractParser<SynchroMessage>() {
    @java.lang.Override
    public SynchroMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SynchroMessage(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SynchroMessage> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SynchroMessage> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public damian.tab.dsynchro.proto.SynchroMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

